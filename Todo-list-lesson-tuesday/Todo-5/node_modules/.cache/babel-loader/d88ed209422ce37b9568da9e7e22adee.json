{"ast":null,"code":"var _jsxFileName = \"/Users/alisher/Documents/Todo-list-lessons/Todo-list-lesson-tuesday/Todo-5/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todolistID1 = v1();\n  let todolistID2 = v1();\n  let [todolists, setTodolists] = useState([{\n    id: todolistID1,\n    title: 'What to learn',\n    filter: 'all'\n  }, {\n    id: todolistID2,\n    title: 'What to buy',\n    filter: 'all'\n  }]);\n  let [tasks, setTasks] = useState({\n    [todolistID1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }],\n    [todolistID2]: [{\n      id: v1(),\n      title: \"HTML&CSS2\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS2\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS2\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API2\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL2\",\n      isDone: false\n    }]\n  });\n\n  // let [todolists, setTodolists] = useState<Array<TodolistsType>>([\n  //     {id: v1(), title: 'What to learn', filter: 'all'},\n  //     {id: v1(), title: 'What to buy', filter: 'all'},\n  // ])\n  //\n  // let [tasks, setTasks] = useState([\n  //     {id: v1(), title: \"HTML&CSS\", isDone: true},\n  //     {id: v1(), title: \"JS\", isDone: true},\n  //     {id: v1(), title: \"ReactJS\", isDone: false},\n  //     {id: v1(), title: \"Rest API\", isDone: false},\n  //     {id: v1(), title: \"GraphQL\", isDone: false},\n  // ]);\n\n  // let [filter, setFilter] = useState<FilterValuesType>(\"all\");\n\n  function removeTask(id) {\n    let filteredTasks = tasks.filter(t => t.id != id);\n    setTasks(filteredTasks);\n  }\n  function addTask(title) {\n    let task = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    let newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  }\n  function changeStatus(taskId, isDone) {\n    let task = tasks.find(t => t.id === taskId);\n    if (task) {\n      task.isDone = isDone;\n    }\n    setTasks([...tasks]);\n  }\n  function changeFilter(todolistID, value) {\n    // setFilter(value);\n    setTodolists(todolists.map(el => el.id === todolistID ? {\n      ...el,\n      filter: value\n    } : el));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todolists.map(el => {\n      let tasksForTodolist = tasks;\n      if (el.filter === \"active\") {\n        tasksForTodolist = tasks.filter(t => t.isDone === false);\n      }\n      if (el.filter === \"completed\") {\n        tasksForTodolist = tasks.filter(t => t.isDone === true);\n      }\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        todolistID: el.id,\n        title: el.title,\n        tasks: tasksForTodolist,\n        removeTask: removeTask,\n        changeFilter: changeFilter,\n        addTask: addTask,\n        changeTaskStatus: changeStatus,\n        filter: el.filter\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ZGwNkYcqGM/L/XCE/iMop3ppRX0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","todolistID1","todolistID2","todolists","setTodolists","id","title","filter","tasks","setTasks","isDone","removeTask","filteredTasks","t","addTask","task","newTasks","changeStatus","taskId","find","changeFilter","todolistID","value","map","el","tasksForTodolist"],"sources":["/Users/alisher/Documents/Todo-list-lessons/Todo-list-lesson-tuesday/Todo-5/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\ntype TodolistsType = {\r\n    id: string,\r\n    title: string,\r\n    filter: FilterValuesType,\r\n}\r\n\r\nfunction App() {\r\n\r\n    let todolistID1=v1();\r\n    let todolistID2=v1();\r\n\r\n    let [todolists, setTodolists] = useState<Array<todolistsType>>([\r\n        {id: todolistID1, title: 'What to learn', filter: 'all'},\r\n        {id: todolistID2, title: 'What to buy', filter: 'all'},\r\n    ])\r\n\r\n    let [tasks, setTasks] = useState({\r\n        [todolistID1]:[\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ],\r\n        [todolistID2]:[\r\n            {id: v1(), title: \"HTML&CSS2\", isDone: true},\r\n            {id: v1(), title: \"JS2\", isDone: true},\r\n            {id: v1(), title: \"ReactJS2\", isDone: false},\r\n            {id: v1(), title: \"Rest API2\", isDone: false},\r\n            {id: v1(), title: \"GraphQL2\", isDone: false},\r\n        ]\r\n    });\r\n\r\n    // let [todolists, setTodolists] = useState<Array<TodolistsType>>([\r\n    //     {id: v1(), title: 'What to learn', filter: 'all'},\r\n    //     {id: v1(), title: 'What to buy', filter: 'all'},\r\n    // ])\r\n    //\r\n    // let [tasks, setTasks] = useState([\r\n    //     {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n    //     {id: v1(), title: \"JS\", isDone: true},\r\n    //     {id: v1(), title: \"ReactJS\", isDone: false},\r\n    //     {id: v1(), title: \"Rest API\", isDone: false},\r\n    //     {id: v1(), title: \"GraphQL\", isDone: false},\r\n    // ]);\r\n\r\n    // let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n\r\n    function removeTask(id: string) {\r\n        let filteredTasks = tasks.filter(t => t.id != id);\r\n        setTasks(filteredTasks);\r\n    }\r\n\r\n    function addTask(title: string) {\r\n        let task = {id: v1(), title: title, isDone: false};\r\n        let newTasks = [task, ...tasks];\r\n        setTasks(newTasks);\r\n    }\r\n\r\n    function changeStatus(taskId: string, isDone: boolean) {\r\n        let task = tasks.find(t => t.id === taskId);\r\n        if (task) {\r\n            task.isDone = isDone;\r\n        }\r\n\r\n        setTasks([...tasks]);\r\n    }\r\n\r\n    function changeFilter(todolistID: string, value: FilterValuesType) {\r\n        // setFilter(value);\r\n        setTodolists(todolists.map(el => el.id === todolistID ? {...el, filter: value} : el))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {todolists.map((el) => {\r\n                let tasksForTodolist = tasks;\r\n                if (el.filter === \"active\") {\r\n                    tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n                }\r\n                if (el.filter === \"completed\") {\r\n                    tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n                }\r\n                return (\r\n                    <Todolist\r\n                        key={el.id}\r\n                        todolistID={el.id}\r\n                        title={el.title}\r\n                        tasks={tasksForTodolist}\r\n                        removeTask={removeTask}\r\n                        changeFilter={changeFilter}\r\n                        addTask={addTask}\r\n                        changeTaskStatus={changeStatus}\r\n                        filter={el.filter}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}